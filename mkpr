#!/usr/bin/env bash
set -e -o pipefail

PROGRAM_NAME="$(basename "$0")"


function make_pull_request()
{
    local branch
    branch="$(git rev-parse --abbrev-ref HEAD)"
    if [ "$branch" == master ] || [ "$branch" == main ]; then
        echo "You tried to make a PR from your $branch branch. It's usually a bad idea."
        echo ""
        echo "Ideally, you would have made a new branch before you started working on this"
        echo "pull request, but you can still do so:"
        echo ""
        echo "    \$ git checkout -b name-of-new-branch"
        echo "    \$ git branch -D $branch   # contains commits that are now on new branch"
        echo "    \$ $PROGRAM_NAME"
        echo ""
        exit 1
    fi

    # I have two remotes "me" and "origin" in some repos I forked.
    # The "me" remote is my fork. Create pull request there if it exists.
    #
    # This only applies to creating a new PR. For most things the actual repo is better.
    local remote
    if git config --get remote.me.url >/dev/null; then
        remote=me
    else
        remote=origin
    fi

    printf "Pushing the '%s' branch to " "$branch"
    git config --get "remote.$remote.url"

    git push --set-upstream "$remote" "$branch"

    # Figure out URL for creating pull request in web browser
    local repo_url pr_url
    repo_url="$(git config remote.$remote.url)"
    case "$repo_url" in
        https://*github.com/*/*)
            pr_url="$repo_url/pull/new/$branch"
            ;;
        https://*gitlab.*/*/*)
            pr_url="$repo_url/-/merge_requests/new?merge_request%5Bsource_branch%5D=$branch"
            ;;
        *)
            echo "Error: don't know how to create pull request to $repo_url"
            exit 1
    esac

    # Try not to spam terminal with anything that web browser prints
    open "$pr_url" >&/dev/null &
    disown
}


function checkout_with_pr_number()
{
    git fetch origin "pull/$1/head"
    git checkout FETCH_HEAD
}


function push_with_pr_number()
{
    local prnum="$1"

    if ! [[ "$(git config remote.origin.url)" =~ ^https://(([^/@]+)@)?github.com/([^/]+)/([^/]+) ]]; then
        echo "$PROGRAM_NAME: failed to get github user and repo from git config"
        exit 1
    fi
    local owner="${BASH_REMATCH[3]}"
    local repo="${BASH_REMATCH[4]}"

    local json
    json="$(mktemp)"

    # shellcheck disable=SC2064
    trap "rm -f -- '$json'" EXIT

    curl -s -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/$owner/$repo/pulls/$prnum" > "$json"

    local pr_repo
    pr_repo="$(jq -r .head.repo.clone_url "$json")"

    local pr_branch
    pr_branch="$(jq -r .head.ref "$json")"

    echo "Pushing to branch '$pr_branch' at $pr_repo"
    git push "$pr_repo" "HEAD:$pr_branch"

    rm "$json"
}


if [ $# == 0 ]; then
    make_pull_request
elif [ $# == 2 ] && [ "$1" == "checkout" ] && [[ "$2" =~ ^[0-9]+$ ]]; then
    checkout_with_pr_number "$2"
elif [ $# == 2 ] && [ "$1" == "push" ] && [[ "$2" =~ ^[0-9]+$ ]]; then
    push_with_pr_number "$2"
else
    echo "Usage:"
    echo "  $PROGRAM_NAME               # make pull request"
    echo "  $PROGRAM_NAME checkout 123  # look at else's pull request locally"
    echo "  $PROGRAM_NAME push 123      # push your commits into someone else's pull request"
fi
